# ' Global abbreviations file for SciTE (abbrev.properties)
# ' Contains a list of entries of the form abbreviation=expansion '
# ' Generated: 15.05.2008    Last modified: 28.01.2017 '
# ' '
# ' In Au3 file, type the abbreviation and press Spacebar to insert the expansion '
# ' "|" marks the position the caret will be after expansion. '
# ' "\n" marks a carriage return. "\t" marks a Tab. '
# ' '
# ' A B B R E V I A T I O N S  F O R  A U T O I T  P R O D U C T I O N '

# AutoIt Functions
as=Assign(|)
aso=AutoitSetOption(|)
awgt=AutoitWinGetTitle()\n|
awst=AutoitWinSetTitle(|)
ba=BitAND(|)
bi=BlockInput(|)
bin=Binary(|)
binl=BinaryLen(|)
binm=BinaryMid(|)
bn=BitNOT(|)
bo=BitOR(|)
bro=BitRotate(|)
bre=Break(|)
bs=BitShift(|)
bx=BitXOR(|)
ccl=ControlClick(|)
cco=ControlCommand(|)
cd=ControlDisable("|","","")
cdt=CDTray(|)
ce=ControlEnable("|","","")
ceil=Ceiling(|)
cf=ControlFocus("|","","")
cg=ClipGet()|
cgf=ControlGetFocus(|)
cgh=ControlGetHandle(|)
cgp=ControlGetPos(|)
cgt=ControlGetText(|)
ch=ControlHide(|)
clv=ControlListView(|)
cm=ControlMove(|)
cp=ClipPut(|)
cr=ConsoleRead(|)
cs=ControlSend(|)
csh=ControlShow(|)
cst=ControlSetText(|)
cw=ConsoleWrite(| & @CRLF)
cwr=ConsoleWrite("! |" & @CRLF)
cwg=ConsoleWrite("+ |" & @CRLF)
cwb=ConsoleWrite("> |" & @CRLF)
cwo=ConsoleWrite("- |" & @CRLF)
cwln=ConsoleWrite("- " & @ScriptLineNumber & "|" & @CRLF)
cwe=ConsoleWriteError(| & @CRLF)
dco=DirCopy(|)
dcr=DirCreate(|)
dgd=DriveGetDrive(|)
dgfs=DriveGetFileSystem(|)
dgl=DriveGetLabel(|)
dgsi=DirGetSize(|)
dgse=DriveGetSerial(|)
dgt=DriveGetType(|)
dll=DllCall(|)
dllc=DllClose(|)
dllo=DllOpen(|)
dllsc=DllStructCreate(|)
dllsgd=DllStructGetData(|)
dllsgp=DllStructGetPtr(|)
dllsgs=DllStructGetSize(|)
dllssd=DllStructSetData(|)
dm=DirMove(|)
dma=DriveMapAdd(|)
dmd=DriveMapDel(|)
dmg=DriveMapGet(|)
dr=DirRemove(|)
ds=DriveStatus(|)
dsf=DriveSpaceFree(|)
dsl=DriveSetLabel(|)
dst=DriveSpaceTotal(|)
eg=EnvGet(|)
es=EnvSet(|)
eu=EnvUpdate()\n|
exec=Execute(|)
fcd=FileChangeDir(|)
fcl=FileClose(|)
fcnl=FileCreateNTFSLink(|)
fco=FileCopy(|)
fcs=FileCreateShortcut(|)
fd=FileDelete(|)
fe=FileExists(|)
ffff=FileFindFirstFile(|)
ffnf=FileFindNextFile(|)
fga=FileGetAttrib(|)
fgln=FileGetLongName(|)
fgsh=FileGetShortcut(|)
fgsi=FileGetSize(|)
fgsn=FileGetShortName(|)
fgt=FileGetTime(|)
fgv=FileGetVersion(|)
fi=FileInstall(|)
flo=Floor(|)
fm=FileMove(|)
fo=FileOpen(|)
fod=FileOpenDialog(|)
fr=FileRead(|)
fread=Local $hFile = FileOpen('|', $FO_READ + $FO_UTF8_NOBOM)\nLocal $sFileContent = FileRead($hFile)\nFileClose($hFile)\n
frc=FileRecycle(|)
frce=FileRecycleEmpty(|)
frl=FileReadLine(|)
fsa=FileSetAttrib(|)
fsd=FileSaveDialog(|)
fsf=FileSelectFolder(|)
fsp=FtpSetProxy(|)
fst=FileSetTime(|)
fw=FileWrite(|)
fwl=FileWriteLine(|)
fwrite=Local $hFile = FileOpen('|', $FO_OVERWRITE + $FO_UTF8_NOBOM)\nFileWrite($hFile, $sContentToWrite)\nFileClose($hFile)\n
gc=GUICreate(|)
gcca=GUICtrlCreateAvi(|)
gccb=GUICtrlCreateButton(|)
gcccb=GUICtrlCreateCheckbox(|)
gcccm=GUICtrlCreateContextMenu(|)
gccda=GUICtrlCreateDate(|)
gccdu=GUICtrlCreateDummy()\n|
gcce=GUICtrlCreateEdit(|)
gccg=GUICtrlCreateGroup(|)
gccgc=GUICtrlCreateGroup('', -99, -99, 1, 1) ; Close group.\n|
gccgr=GUICtrlCreateGraphic(|)
gcci=GUICtrlCreateInput(|)
gccico=GUICtrlCreateIcon(|)
gccla=GUICtrlCreateLabel(|)
gccli=GUICtrlCreateList(|)
gccm=GUICtrlCreateMenu(|)
gccmc=GUICtrlCreateMonthCal(|)
gccmi=GUICtrlCreateMenuItem(|)
gccco=GUICtrlCreateCombo(|)
gcco=GUICtrlCreateObj(|)
gccpi=GUICtrlCreatePic(|)
gccpr=GUICtrlCreateProgress(|)
gccr=GUICtrlCreateRadio(|)
gccs=GUICtrlCreateSlider(|)
gcct=GUICtrlCreateTab(|)
gccti=GUICtrlCreateTabItem(|)
gcctic=GUICtrlCreateTabItem('') ; Close tabitem.\n|
gcctv=GUICtrlCreateTreeView(|)
gcctvi=GUICtrlCreateTreeViewItem(|)
gccu=GUICtrlCreateUpdown(|)
gcd=GUICtrlDelete(|)
gcgh=GUICtrlGetHandle(|)
gcgs=GUICtrlGetState(|)
gcr=GUICtrlRead(|)
gcrlvs=GUICtrlRegisterListViewSort(|)
gcrm=GUICtrlRecvMsg(|)
gcsbc=GUICtrlSetBkColor(|)
gcsco=GUICtrlSetColor(|)
gcscu=GUICtrlSetCursor(|)
gcsd=GUICtrlSetData(|)
gcsf=GUICtrlSetFont(|)
gcsgr=GUICtrlSetGraphic(|)
gcsi=GUICtrlSetImage(|)
gcsl=GUICtrlSetLimit(|)
gcsm=GUICtrlSendMsg(|)
gcsoe=GUICtrlSetOnEvent(|)
gcsp=GUICtrlSetPos(|)
gcsr=GUICtrlSetResizing(|)
gcss=GUICtrlSetState(|)
gcsst=GUICtrlSetStyle(|)
gcst=GUICtrlSetTip(|)
gcstd=GUICtrlSendToDummy(|)
gd=GUIDelete(|)
ggci=GUIGetCursorInfo(|)
ggm=GUIGetMsg(|)
grm=GUIRegisterMsg(|)
gs=GUISwitch(|)
gsa=GUISetAccelerators(|)
gsbc=GUISetBkColor(|)
gsc=GUISetCoord(|)
gscu=GUISetCursor(|)
gsf=GUISetFont(|)
gsg=GUIStartgroup(|)
gsh=GUISetHelp(|)
gsi=GUISetIcon(|)
gsoe=GUISetOnEvent(|)
gss=GUISetState(|)
gsw=GUISwitch(|)
hks=HotKeySet(|)
hsp=httpSetProxy(|)
ib=InputBox(|)
id=IniDelete(|)
ic=InetClose(|)
ig=InetGet(|)
igi=InetGetInfo(|)
igs=InetGetSize(|)
ir=IniRead(|)
irs=IniReadSection(|)
irsn=IniReadSectionNames(|)
isad=IsAdmin()\n|
isar=IsArray(|)
isbin=IsBinary(|)
isbo=IsBool(|)
isd=IsDeclared(|)
isf=IsFloat(|)
ishw=IsHWnd(|)
isi=IsInt(|)
isk=IsKeyword(|)
isn=IsNumber(|)
iso=IsObj(|)
iss=IsString(|)
iw=IniWrite(|)
iws=IniWriteSection(|)
mb=MsgBox(|)
mb2=MsgBox(0, '', |)
mc=MouseClick(|)
mcd=MouseClickDrag(|)
md=MouseDown(|)
mgc=MouseGetCursor()\n|
mgp=MouseGetPos()\n|
mgs=MemGetStats()\n|
mm=MouseMove(|)
mu=MouseUp(|)
mw=MouseWheel(|)
num=Number(|)
oae=OnAutoItExit()\n|
oas=OnAutoItStart()\n|
oasr=#OnAutoItStartRegister "|"
oaer=OnAutoItExitRegister ("|")
ocr=ObjCreate(|)
oev=ObjEvent(|)
oge=ObjGet(|)
pc=ProcessClose(|)
pcs=PixelChecksum(|)
pe=ProcessExists(|)
pgc=PixelGetColor(|)
pl=ProcessList(|)
poff=ProgressOff()\n|
pon=ProgressOn(|)
ps=PixelSearch(|)
pset=ProgressSet(|)
psp=ProcessSetPriority(|)
pw=ProcessWait(|)
pwc=ProcessWaitClose(|)
ra=RunAs(|)
raw=RunAsWait(|)
rd=RegDelete(|)
rdm=Random(|)
rek=RegEnumKey(|)
rev=RegEnumVal(|)
rnd=Round(|)
rr=RegRead(|)
rwa=RunWait(|)
rwr=RegWrite(|)
sacr=StringAddCR(|)
sbgt=StatusbarGetText(|)
sco=StringCompare(|)
sd=Shutdown(|)
se=SetError(|)
ser=StdErrRead(|)
sex=SetExtended(|)
sexec=ShellExecute(|)
sexecw=ShellExecuteWait(|)
sf=StringFormat(|)
sia=StringIsAlpha(|)
sian=StringIsAlNum(|)
siascii=StringIsASCII(|)
sid=StringIsDigit(|)
sif=StringIsFloat(|)
sii=StringIsInt(|)
sil=StringIsLower(|)
sio=SplashImageOn(|)
sioc=StdioClose(|)
sis=StringInStr(|)
sisp=StringIsSpace(|)
siu=StringIsUpper(|)
siw=StdinWrite(|)
sixd=StringIsXDigit(|)
ska=SendKeepActive(|)
sl=StringLeft(|)
slen=StringLen(|)
slower=StringLower(|)
slp=Sleep(|)
sm=StringMid(|)
so=SplashOff()\n|
sor=StdoutRead(|)
sp=SoundPlay(|)
sr=StringRight(|)
srep=StringReplace(|)
srex=StringRegExp(|)
srexr=StringRegExpReplace(|)
ss=StringSplit(|)
sscr=StringStripCR(|)
ssws=StringStripWS(|)
sswv=SoundSetWaveVolume(|)
stbin=StringToBinary(|)
stl=StringTrimLeft(|)
sto=SplashTextOn(|)
str=StringTrimRight(|)
stri=String(|)
supper=StringUpper(|)
tci=TrayCreateItem(|)
tcm=TrayCreateMenu(|)
tcpa=TCPAccept(|)
tcpc=TCPConnect(|)
tcpcs=TCPCloseSocket(|)
tcpl=TCPListen(|)
tcpntip=TCPNameToIP(|)
tcpr=TCPRecv(|)
tcps=TCPSend(|)
tcpsd=TCPShutdown()\n|
tcpsu=TCPStartup()\n|
td=TimerDiff(|)
tgm=TrayGetMsg()\n|
ti=TimerInit()\n|
tid=TrayItemDelete(|)
tigh=TrayItemGetHandle(|)
tigs=TrayItemGetState(|)
tigt=TrayItemGetText(|)
tisoe=TrayItemSetOnEvent(|)
tiss=TrayItemSetState(|)
tist=TrayItemSetText(|)
toolt=ToolTip(|)
tsc=TraySetClick(|)
tsi=TraySetIcon(|)
tsoe=TraySetOnEvent(|)
tspi=TraySetPauseIcon(|)
tss=TraySetState(|)
tstt=TraySetToolTip(|)
tt=TrayTip(|)
ub=UBound(|)
udpb=UDPBind(|)
udpcs=UDPCloseSocket(|)
udpo=UDPOpen(|)
udpr=UDPRecv(|)
udpsd=UDPShutdown()\n|
udpsu=UDPStartup()\n|
wa=WinActive(|)
wat=WinActivate(|)
wc=WinClose(|)
we=WinExists(|)
wf=WinFlash(|)
wgcl=WinGetClassList(|)
wgcp=WinGetCaretPos()\n|
wgcs=WinGetClientSize(|)
wgh=WinGetHandle(|)
wgpo=WinGetPos(|)
wgpr=WinGetProcess(|)
wgs=WinGetState(|)
wgte=WinGetText(|)
wgti=WinGetTitle(|)
wk=WinKill(|)
wl=WinList(|)
wm=WinMove(|)
wma=WinMinimizeAll()\n|
wmau=WinMinimizeAllUndo()\n|
wmsi=WinMenuSelectItem(|)
wsot=WinSetOnTop(|)
wss=WinSetState(|)
wst=WinSetTitle(|)
wstr=WinSetTrans(|)
ww=WinWait(|)
wwa=WinWaitActive(|)
wwc=WinWaitClose(|)
wwna=WinWaitNotActive(|)

# Files
au3check=C:\\Program Files\\Autoit3\\Au3Check.exe|
autoit3=C:\\Program Files\\Autoit3\\AutoIt3.exe|
aut2exe=C:\\Program Files\\AutoIt3\\Aut2Exe\\Aut2Exe.exe|
datbeta=C:\\Program Files\\AutoIt3\\Beta\\au3check.dat|
datfinal=C:\\Program Files\\AutoIt3\\au3check.dat|
icon=C:\\Program Files\\AutoIt3\\Aut2Exe\\Icons\\|.ico
scite=C:\\Program Files\\Autoit3\\SciTe\\SciTe.exe|

# Directories
autoit3dir=C:\\Program Files\\AutoIt3\\|
aut2exedir=C:\\Program Files\\AutoIt3\\Aut2Exe\\|
icondir=C:\\Program Files\\AutoIt3\\Aut2Exe\\Icons\\|
includedir=C:\\Program Files\\AutoIt3\\Include\\|
scitedir=C:\\Program Files\\Autoit3\\SciTe\\|

# Abbreviate strings
HKCR=HKEY_CLASSES_ROOT
HKCU=HKEY_CURRENT_USER
HKLM=HKEY_LOCAL_MACHINE
HKU=HKEY_USERS
HKCC=HKEY_CURRENT_CONFIG

# Gui Variables
but=$idButton_|
chk=$idCheckbox_|
dat=$idDate_|
edt=$idEdit_|
inp=$idInput_|
lbl=$idLabel_|
lvw=$idListView_|
men=$idMenu_|
prg=$idProgressbar_|
rad=$idRadio_|
sld=$idSlider_|
tab=$idTab_|
trv=$idTreeview_|

# Tray Variables
item=$item_|
trayi=$idTrayItem_|
traym=$idTrayMenu_|

# Misc Variables
hnd=$handle_|
regkey=$registry_Key
regval=$registry_Value
regdat=$registry_Data
error=$error |
errval=$iErrorValue = @error\n|
extval=$iExtendedValue = @extended\n|
retval=$Result = |
iretval=$iResult = |
aretval=$aResult = |
bretval=$bResult = |
dretval=$dResult = |
vretval=$vResult = |
result=$result = |

# Constant GUICtrlRead
gchecked=$GUI_CHECKED|
gunchecked=$GUI_UNCHECKED|

# Constant GUICtrlState
genable=$GUI_ENABLE|
gdisable=$GUI_DISABLE|
ghide=$GUI_HIDE|
gshow=$GUI_SHOW|
gfocus=$GUI_FOCUS|

# Events and messages
eclose=$GUI_EVENT_CLOSE|
emin=$GUI_EVENT_MINIMIZE|
erestore=$GUI_EVENT_RESTORE|
emax=$GUI_EVENT_MAXIMIZE|

# PreSelected Commands
cmd=RunWait('"' & @ComSpec & '" /c |', '', @SW_HIDE)\n
cmd2=RunWait('"' & @ComSpec & '" /c ' & |, '', @SW_HIDE)\n
slp0=Sleep(10)\n|
slp1=Sleep(1000)\n|
slp2=Sleep(2000)\n|
slp3=Sleep(3000)\n|
slp4=Sleep(4000)\n|
slp5=Sleep(5000)\n|

# GUI Common Prefixes to Functions
gcc=GUICtrlCreate|
gcs=GUICtrlSet|

# Macro's
cr1=& @CRLF |
cr2=& @CRLF & @CRLF |
cr3=& @CRLF & @CRLF & @CRLF |
cr4=& @CRLF & @CRLF & @CRLF & @CRLF |
cr5=& @CRLF & @CRLF & @CRLF & @CRLF & @CRLF |
cont1=& @CRLF & _\n'|'
cont11=& @CRLF & _\n'|'& @CRLF & _\n''
cont111=& @CRLF & _\n'|'& @CRLF & _\n''& @CRLF & _\n''
cont2=& @CRLF & _\n"|"
cont22=& @CRLF & _\n"|"& @CRLF & _\n""
cont222=& @CRLF & _\n"|"& @CRLF & _\n""& @CRLF & _\n""
tab1=& @TAB |
tab2=& @TAB & @TAB |
tab3=& @TAB & @TAB & @TAB |
tab4=& @TAB & @TAB & @TAB & @TAB |
tab5=& @TAB & @TAB & @TAB & @TAB & @TAB |
lf1=& @LF |
lf2=& @LF & @LF |
lf3=& @LF & @LF & @LF |
lf4=& @LF & @LF & @LF & @LF |
lf5=& @LF & @LF & @LF & @LF & @LF |

# Keywords
cc=ContinueCase\n|
cl=ContinueLoop\n|
el=ExitLoop\n|
err=@error |
ext=@extended |

# Directives
include=#include <|\n
incl=#include <|\n
incll=#include "|.au3"\n
includeonce=#include-once\n|
incl1=#include-once\n|
prag=#pragma compile(|,)\n
reg=#Region - |\n
reg2=#Region - |\n#EndRegion\n
ereg=#EndRegion\n|
nti=#NoTrayIcon\n|

# @error Handling
iferrc=If @error Then ConsoleWrite('! ---> @error=' & @error & '  @extended=' & @extended & ' : |' & @CRLF)\n
ifextc=If @error Or @extended Then ConsoleWrite('! ---> @error=' & @error & '  @extended=' & @extended & ' : |' & @CRLF)\n
iferrext=If @error then Return SetError(@error, @extended, |)\n
iferrext2=If @error Then\n\tReturn SetError(@error, @extended, |)\nElse\n\t\nEndIf\n
iferrext3=If @error Then\n\tReturn SetError(@error, @extended, |)\nElseif  Then\n\t\nElse\n\t\nEndIf\n
iferrmsg=If @error Then MsgBox($MB_ICONERROR, '|', '@error = ' & @error & @CRLF & '@extended = ' & @extended)\n
switcherr=Switch @error\n\tCase 1\n\t\t|\n\tCase 2\n\t\t\n\tCase 3\n\t\t\n\tCase 4\n\t\t\n\tCase Else\n\t\t\nEndSwitch\n
retseterr=Return SetError(@error, @extended, |)\n

# Multiline Structures
ifthen=If | Then\n\t\nEndIf
ifelse=If | Then\n\t\nElse\n\t\nEndIf
ifelseif=If | Then\n\t\nElseIf False Then\n\t\nElse\n\t\nEndIf
dountil=Do\n\t\nUntil |
fornext=For $i = | To  Step 1\n\t\nNext
fornext2=For $iStep_idx = | To  Step 1\n\t\nNext
fun=Func _|()\n\t\nEndFunc\n
functions=; Start - Functions\n\nFunc _|A()\nEndFunc\n\nFunc _B()\nEndFunc\n\nFunc _C()\nEndFunc\n\nFunc _D()\nEndFunc\n\nFunc _E()\nEndFunc\n\nFunc _F()\nEndFunc\n\nFunc _G()\nEndFunc\n\nFunc _H()\nEndFunc\n\nFunc _I()\nEndFunc\n\nFunc _J()\nEndFunc\n
funex=_Example()\nFunc _Example()\n\t|\nEndFunc\n
funex123=_Example_1()\n_Example_2()\n_Example_3()\n\nFunc _Example_1()\n\t|\nEndFunc\n\nFunc _Example_2()\n\t\nEndFunc\n\nFunc _Example_3()\n\t\nEndFunc\n
funwrap=Func _Wrapper(|, $iError = @error, $iExtended = @extended)\n\t\n\tReturn SetError($iError , $iExtended , 1)\nEndFunc\n
selectcase=Select\n\tCase |\n\tCase \n\tCase \n\tCase \n\tCase Else \nEndSelect\n
switchcase=Switch |\n\tCase \n\tCase \n\tCase \n\tCase \n\tCase Else \nEndSwitch\n
more=|\nCase \nCase \nCase \nCase \nCase Else
whilewend=While |\nWEnd\n
withendwith=With |\nEndWith\n

# Start of Structures
for0=For $i = 0 To |
for0ub=For $i = 0 To UBound(|) -1
for1=For $i = 1 To |
for1ub=For $i = 1 To UBound(|) -1
ternary=(|@compiled) ? (True) : (False)

# GUI managment
setupgui=#include <GUIConstants.au3>\n#include <GUIConstantsEx.au3>\n#include <WindowsConstants.au3>\n\n#Region - GUI Create\nGUICreate('|')\nGUISetState()\n#EndRegion\n
selectloop=#Region - GUI SelectLoop\nWhile 1\n\t$msg = GUIGetMsg()\n\tSelect\n\t\tCase $msg = $GUI_EVENT_CLOSE\n\t\t\tExit\n\t\tCase $msg = |\n\t\tCase $msg = \n\t\tCase $msg = \n\t\tCase $msg = \n\tEndSelect\nWEnd\n#EndRegion\n
switchloop=#Region - GUI SwitchLoop\nWhile True\n\tSwitch GUIGetMsg()\n\t\tCase $GUI_EVENT_EXIT\n\t\t\tExit\n\t\tCase |\n\t\tCase \n\t\tCase \n\t\tCase Else \n\tEndSwitch\nWEnd\n#EndRegion\n
moremsg=|\nCase $msg = \t\nCase $msg = \nCase $msg = \nCase $msg = \nCase $msg =\n

# Special functions
say=Func _Say($sText, $iRate = 1, $iVolume = 100)\n\tIf $iRate > 10 Or $iVolume > 100 Then Return\n\tLocal $oTalk = ObjCreate('SAPI.SpVoice')\n\tIf Not @error Then\n\t\t$oTalk.Rate = $iRate\n\t\t$oTalk.Volume = $iVolume\n\t\t$oTalk.Speak($sText)\n\tEndIf\nEndFunc\n|
selfdelete=Func _SelfDelete($iDelay = 0)\n\tLocal $sCmdFile\n\tFileDelete(@TempDir & "\scratch.bat")\n\t$sCmdFile = 'ping -n ' & $iDelay & '127.0.0.1 > nul' & @CRLF _\n\t\t\t& ':loop' & @CRLF _\n\t\t\t& 'del "' & @ScriptFullPath & '" > nul' & @CRLF _\n\t\t\t& 'if exist "' & @ScriptFullPath & '" goto loop' & @CRLF _\n\t\t\t& 'del ' & @TempDir & '\scratch.bat'\n\tFileWrite(@TempDir & "\scratch.bat", $sCmdFile)\n\tRun(@TempDir & "\scratch.bat", @TempDir, @SW_HIDE)\nEndFunc\n|

# AutoIt3Wrapper Directives + Options
a3w=#Region AutoIt3Wrapper Directives\n;** This is a list of compiler directives used by AutoIt3Wrapper.exe.\n;** comment the lines you don't need or else it will override the default settings\n;===============================================================================================\n;** AUTOIT3 settings\n#AutoIt3Wrapper_UseX64=                         ;(Y/N) Use X64 versions for AutoIt3_x64 or AUT2EXE_x64. Default=N\n#AutoIt3Wrapper_Version=                        ;(B/P) Use Beta or Production for AutoIt3 and AUT2EXE. Default is P\n#AutoIt3Wrapper_Run_Debug_Mode=                 ;(Y/N)Run Script with console debugging. Default=N\n;===============================================================================================\n;** AUT2EXE settings\n#AutoIt3Wrapper_Icon=                           ;Filename of the Ico file to use\n#AutoIt3Wrapper_OutFile=                        ;Target exe/a3x filename.\n#AutoIt3Wrapper_OutFile_Type=                   ;a3x=small AutoIt3 file; exe=Standalone executable (Default)\n#AutoIt3Wrapper_Compression=                    ;Compression parameter 0-4  0=Low 2=normal 4=High. Default=2\n#AutoIt3Wrapper_UseUpx=                         ;(Y/N) Compress output program.  Default=Y\n#AutoIt3Wrapper_Change2CUI=                     ;(Y/N) Change output program to CUI in stead of GUI. Default=N\n;===============================================================================================\n;** Target program Resource info\n#AutoIt3Wrapper_Res_Comment=                    ;Comment field\n#AutoIt3Wrapper_Res_Description=                ;Description field\n#AutoIt3Wrapper_Res_Fileversion=                ;File Version\n#AutoIt3Wrapper_Res_FileVersion_AutoIncrement=  ;(Y/N/P)AutoIncrement FileVersion After Aut2EXE is finished. default=N\n;                                                 P=Prompt, Will ask at Compilation time if you want to increase the versionnumber\n#AutoIt3Wrapper_Res_Language=                   ;Resource Language code . default 2057=English (United Kingdom)\n#AutoIt3Wrapper_Res_LegalCopyright=             ;Copyright field\n#AutoIt3Wrapper_res_requestedExecutionLevel=    ;None, asInvoker, highestAvailable or requireAdministrator   (default=None)\n#AutoIt3Wrapper_Res_SaveSource=                 ;(Y/N) Save a copy of the Scriptsource in the EXE resources. default=N\n;\n; free form resource fields ... max 15\n;     you can use the following variables:\n;     %AutoItVer% which will be replaced with the version of AutoIt3\n;     %date% = PC date in short date format\n;     %longdate% = PC date in long date format\n;     %time% = PC timeformat\n;  eg: #AutoIt3Wrapper_Res_Field=AutoIt Version|%AutoItVer%\n#AutoIt3Wrapper_Res_Field=                      ;Free format fieldname|fieldvalue\n#AutoIt3Wrapper_Res_Field=                      ;Free format fieldname|fieldvalue\n#AutoIt3Wrapper_Res_Field=                      ;Free format fieldname|fieldvalue\n; Add extra ICO files to the resources which can be used with TraySetIcon(@ScriptFullPath, 3) etc\n; list of filename of the Ico files to be added, First one will have number 3, then 4 ..etc\n#AutoIt3Wrapper_Res_Icon_Add=                   ; Filename of ICO to be added.\n#AutoIt3Wrapper_Res_Icon_Add=                   ; Filename of ICO to be added.\n; Add extra files to the resources\n#AutoIt3Wrapper_Res_File_Add=                   ; Filename[,Section [,ResName]] to be added.\n#AutoIt3Wrapper_Res_File_Add=                   ; Filename[,Section [,ResName]] to be added.\n;===============================================================================================\n; Tidy Settings\n#AutoIt3Wrapper_Run_Tidy=                       ;(Y/N) Run Tidy before compilation. default=N\n#AutoIt3Wrapper_Tidy_Stop_OnError=              ;(Y/N) Continue when only Warnings. default=Y\n#Tidy_Parameters=                               ;Tidy Parameters...see SciTE4AutoIt3 Helpfile for options \n;===============================================================================================\n; Au3Stripper\n#AutoIt3Wrapper_Run_Au3Stripper=                 ;(Y/N) Run Au3Stripper before compilation. default=N\n#Au3Stripper_parameters=\n;===============================================================================================\n; AU3Check settings\n#AutoIt3Wrapper_Run_AU3Check=                   ;(Y/N) Run au3check before compilation. Default=Y\n#AutoIt3Wrapper_AU3Check_Parameters=            ;Au3Check parameters\n#AutoIt3Wrapper_AU3Check_Stop_OnWarning=        ;(Y/N) N=Continue on Warnings.(Default) Y=Always stop on Warnings \n#AutoIt3Wrapper_PlugIn_Funcs=                   ;Define PlugIn function names separated by a Comma to avoid AU3Check errors\n;===============================================================================================\n; cvsWrapper settings\n#AutoIt3Wrapper_Versioning==                 ;(Y/N/V) Run cvsWrapper to update the script source. default=N \n;                                                 V=only when version is increased by #AutoIt3Wrapper_Res_FileVersion_AutoIncrement.\n#AutoIt3Wrapper_Versioning_Parameters=          ; /NoPrompt  : Will skip the cvsComments prompt\n;                                                 /Comments  : Text to added in the cvsComments. It can also contain the below variables. \n;===============================================================================================\n; RUN BEFORE AND AFTER definitions\n; The following directives can contain: these variables\n;  %in% , %out%, %icon% which will be replaced by the fullpath filename.\n;  %scriptdir% same as @ScriptDir and %scriptfile% = filename without extension.\n;  %fileversion% is the information from the #AutoIt3Wrapper_Res_Fileversion directive\n;   %scitedir% will be replaced by the SciTE program directory\n;   %autoitdir% will be replaced by the AutoIt3 program directory\n#AutoIt3Wrapper_Run_Before=                     ;process to run before compilation - you can have multiple records that will be processed in sequence\n#AutoIt3Wrapper_Run_After=                      ;process to run After compilation - you can have multiple records that will be processed in sequence\n#EndRegion\n
a3w2=#Region - AutoIt3Wrapper Directives\n#AutoIt3Wrapper_UseX64=\n#AutoIt3Wrapper_Version=\n#AutoIt3Wrapper_Run_Debug_Mode=\n#AutoIt3Wrapper_Icon=\n#AutoIt3Wrapper_OutFile=\n#AutoIt3Wrapper_OutFile_Type=\n#AutoIt3Wrapper_Compression=\n#AutoIt3Wrapper_UseUpx=\n#AutoIt3Wrapper_Change2CUI=\n#AutoIt3Wrapper_Res_Comment=\n#AutoIt3Wrapper_Res_Description=\n#AutoIt3Wrapper_Res_Fileversion=\n#AutoIt3Wrapper_Res_FileVersion_AutoIncrement=\n#AutoIt3Wrapper_Res_Language=\n#AutoIt3Wrapper_Res_LegalCopyright=\n#AutoIt3Wrapper_res_requestedExecutionLevel=\n#AutoIt3Wrapper_Res_SaveSource=\n#AutoIt3Wrapper_Res_Field=\n#AutoIt3Wrapper_Res_Field=\n#AutoIt3Wrapper_Res_Field=\n#AutoIt3Wrapper_Res_Icon_Add=\n#AutoIt3Wrapper_Res_Icon_Add=\n#AutoIt3Wrapper_Res_File_Add=\n#AutoIt3Wrapper_Res_File_Add=\n#AutoIt3Wrapper_Run_Tidy=\n#AutoIt3Wrapper_Tidy_Stop_OnError=\n#Tidy_Parameters=\n#AutoIt3Wrapper_Run_Au3Stripper=\n#Au3Stripper_parameters=\n#AutoIt3Wrapper_Run_AU3Check=\n#AutoIt3Wrapper_AU3Check_Parameters=\n#AutoIt3Wrapper_AU3Check_Stop_OnWarning=\n#AutoIt3Wrapper_PlugIn_Funcs=\n#AutoIt3Wrapper_Versioning==\n#AutoIt3Wrapper_Versioning_Parameters=\n#AutoIt3Wrapper_Run_Before=\n#AutoIt3Wrapper_Run_After=\n#EndRegion\n
options=#Region - Options|\n;~ Opt('CaretCoordMode', 0)\t\t\t\t; 1 = Absolute screen coordinates, 0 = Relative coords to the active window.\n;~ Opt('ExpandEnvStrings', 1)\t\t\t; 0 = Don't expand, 1 = Do expand (Use %dos% variables in strings).\n;~ Opt('ExpandVarStrings', 1)\t\t\t; 0 = Don't expand, 1 = Do expand (Use $autoit$ variables in strings).\n;~ Opt('FtpBinaryMode', 0)\t\t\t\t; 1 = Binary transfer, 0 = ASCII transfer.\n;~ Opt('GUICloseOnESC', 0)\t\t\t\t; 1 = Send the $GUI_EVENT_CLOSE message when ESC is pressed (default).\n; \t\t\t\t\t\t\t\t\t\t  0 = Don't send the $GUI_EVENT_CLOSE message when ESC is pressed.\n;~ Opt('GUICoordMode', 2)\t\t\t\t; 1 = Absolute coordinates still relative to the dialog box.\n; \t\t\t\t\t\t\t\t\t\t  0 = Relative position to the start of the last control (Upper left corner).\n; \t\t\t\t\t\t\t\t\t\t  2 = Cell positionining relative to current cell.\n;~ Opt('GUIDataSeparatorChar', '')\t\t; ''  Define the character which delimits subitems in GUICtrlSetData. The default character is '|'.\n;~ Opt('GUIEventOptions', 1)\t\t\t; 0 = Windows behavior on click on Minimize, Restore and Maximize.\n;\t\t\t\t\t\t\t\t\t\t  1 = Suppress windows behavior on minimize, restore or Maximize. Just send notification.\n;\t\t\t\t\t\t\t\t\t\t  2 = GUICtrlRead of a tab control return ControlID instead of index of the Tab.\n;\t\t\t\t\t\t\t\t\t\t  3 = Combined mode of 1 & 2.\n;~ Opt('GUIOnEventMode', 1)\t\t\t\t; 0 = Disable, 1 = Enable.\n;~ Opt('GUIResizeMode', 1)\t\t\t\t; 0 = No resizing, <1024 = Anytype of resizing (Reference: GuiCtrlSetResizing).\n;~ Opt('MouseClickDelay', 10)\t\t\t; ? = 10 milliseconds by default.\n;~ Opt('MouseClickDownDelay', 10)\t\t; ? = 10 milliseconds by default.\n;~ Opt('MouseClickDragDelay', 250)\t\t; ? = 250 milliseconds by default.\n;~ Opt('MouseCoordMode', 0)\t\t\t\t; 1 = Absolute, 0 = Relative to active window, 2 = Relative to client area.\n;~ Opt('MustDeclareVars', 1)\t\t\t; 0 = No, 1 = Require pre-declare.\n;~ Opt('OnExitFunc', '')\t\t\t\t; ''  Sets the name of the function called when AutoIt exits (Default is OnAutoItExit).\n;~ Opt('PixelCoordMode', 0)\t\t\t\t; 1 = Absolute, 0 = relative, 2 = Relative coords to the client area.\n;~ Opt('SendAttachMode', 1)\t\t\t\t; 0 = Don't attach, 1 = Attach.\n;~ Opt('SendCapslockMode', 0)\t\t\t; 1 = Store and restore, 0 = Don't store / restore.\n;~ Opt('SendKeyDelay', 5)\t\t\t\t; ? = 5 milliseconds by default.\n;~ Opt('SendKeyDownDelay', 1)\t\t\t; ? = 1 millisecond by default.\n;~ Opt('TCPTimeout', 100)\t\t\t\t; ? = 100 milliseconds by default.\n;~ Opt('TrayAutoPause', 0)\t\t\t\t; 1 = AutoPausing is On, 0 = AutoPausing is Off.\n;~ Opt('TrayIconDebug', 1)\t\t\t\t; 0 = No info, 1 = Debug line info.\n;~ Opt('TrayIconHide', 1)\t\t\t\t; 0 = Show, 1 = Hide.\n;~ Opt('TrayMenuMode', 1)\t\t\t\t; 0 = Default menu items (Script Paused / Exit) are appended to the user created menu,\n;\t\t\t\t\t\t\t\t\t\t\tuser created checked items will automatically unchecked, if you double click the tray\n;\t\t\t\t\t\t\t\t\t\t\ticon then the controlid is returned which has the "Default"-style.\n;\t\t\t\t\t\t\t\t\t\t  1 = No default menu.\n;\t\t\t\t\t\t\t\t\t\t  2 = User created checked items will not automatically unchecked if you click it.\n;\t\t\t\t\t\t\t\t\t\t  4 = Don't return the menuitemID which has the "default"-style in\n;\t\t\t\t\t\t\t\t\t\t\tthe main contextmenu if you double click the tray icon.\n;~ Opt('TrayOnEventMode', 1)\t\t\t; 0 = disable, 1 = enable.\n;~ Opt('WinDetectHiddenText', 1)\t\t; 0 = Don't detect, 1=Do detect.\n;~ Opt('WinSearchChildren', 1)\t\t\t; 0 = No, 1 = Search children also.\n;~ Opt('WinTextMatchMode', 4)\t\t\t; 1 = Complete / Slow mode, 2 = Quick mode.\n;~ Opt('WinTitleMatchMode', 4)\t\t\t; 1 = Start, 2 = SubString, 3 = Exact, 4 = Advanced, -1 to -4 = Case Insensitive.\n;~ Opt('WinWaitDelay', 250)\t\t\t\t; ? = 250 milliseconds by default.\n#EndRegion\n

# Command Line features
cmdline=$CMDLINE[|]
cmdlineselect=#Region - CmdlineSelect\nIf $CMDLINE[0] Then\n\tFor $i = 1 To $CMDLINE[0]\n\t\tSelect\n\t\t\tCase $CMDLINE[$i] = '/?'\n\t\t\t\tMsgBox(0x40000, @ScriptName & ' Help', _\n\t\t\t\t\t\t'Switches are:' & @CRLF _\n\t\t\t\t\t\t & @CRLF & '/extract' _\n\t\t\t\t\t\t & @CRLF & @TAB & 'Extract files to current directory' _\n\t\t\t\t\t\t & @CRLF & '/x|' _\n\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t & @CRLF & @TAB & '')\n\t\t\t\tExit\n\t\t\tCase $CMDLINE[$i] = '/extract'\n\t\t\t\tFileInstall('x', @ScriptDir & '\')\n\t\t\t\tExit\n\t\t\tCase $CMDLINE[$i] = '/x'\n\t\t\tCase $CMDLINE[$i] = '/x'\n\t\t\tCase $CMDLINE[$i] = '/x'\n\t\t\tCase $CMDLINE[$i] = '/x'\n\t\t\tCase Else\n\t\t\t\tMsgBox(0x40000, 'Incorrect switch used', _\n\t\t\t\t\t\t'Command used:' & @CRLF & $CMDLINERAW & @CRLF & _\n\t\t\t\t\t\t@CRLF & 'Use /? for the switches available.')\n\t\t\t\tExit\n\t\tEndSelect\n\tNext\nEndIf\n#EndRegion\n
cmdlineselect2=#Region - CmdlineSelect + Properties\nIf $CMDLINE[0] Then\n\tFor $i = 1 To $CMDLINE[0]\n\t\tIf StringLeft($CMDLINE[$i], 1) = '/' Then\n\t\t\tSelect\n\t\t\t\tCase $CMDLINE[$i] = '/?'\n\t\t\t\t\tMsgBox(0x40000, @ScriptName & ' Help', _\n\t\t\t\t\t\t\t'Switches are:' & @CRLF _\n\t\t\t\t\t\t\t & @CRLF & '/extract' _\n\t\t\t\t\t\t\t & @CRLF & @TAB & 'Extract files to current directory' _\n\t\t\t\t\t\t\t & @CRLF & '/x|' _\n\t\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t\t & @CRLF & @TAB & '')\n\t\t\t\t\tExit\n\t\t\t\tCase $CMDLINE[$i] = '/extract'\n\t\t\t\t\tFileInstall('x', @ScriptDir & '\')\n\t\t\t\t\tExit\n\t\t\t\tCase $CMDLINE[$i] = '/x'\n\t\t\t\tCase $CMDLINE[$i] = '/x'\n\t\t\t\tCase $CMDLINE[$i] = '/x'\n\t\t\t\tCase $CMDLINE[$i] = '/x'\n\t\t\t\tCase Else\n\t\t\t\t\t_CmdlineMsgBox()\n\t\t\tEndSelect\n\t\tElse\n\t\t\tConst $PROPERTY = StringSplit($CMDLINE[$i], '=')\n\t\t\tIf Not @error Then\n\t\t\t\tSelect\n\t\t\t\t\tCase $PROPERTY[1] = 'x'\n\t\t\t\t\t\t$x = $PROPERTY[2]\n\t\t\t\t\tCase $PROPERTY[1] = 'x'\n\t\t\t\t\t\t$x = $PROPERTY[2]\n\t\t\t\t\tCase $PROPERTY[1] = 'x'\n\t\t\t\t\t\t$x = $PROPERTY[2]\n\t\t\t\t\tCase $PROPERTY[1] = 'x'\n\t\t\t\t\t\t$x = $PROPERTY[2]\n\t\t\t\t\tCase $PROPERTY[1] = 'x'\n\t\t\t\t\t\t$x = $PROPERTY[2]\n\t\t\t\t\tCase Else\n\t\t\t\t\t\t_CmdlineMsgBox()\n\t\t\t\tEndSelect\n\t\t\tElse\n\t\t\t\t_CmdlineMsgBox()\n\t\t\tEndIf\n\t\tEndIf\n\tNext\nEndIf\nFunc _CmdlineMsgBox()\n\tMsgBox(0x40000, 'Incorrect switch used', _\n\t\t\t'Command used:' & @CRLF & $CMDLINERAW & @CRLF & _\n\t\t\t@CRLF & 'Use /? for the switches available.')\n\tExit\nEndFunc\n#EndRegion\n
cmdlineswitch=#Region - CmdlineSwitch\nIf $CMDLINE[0] Then\n\tFor $i = 1 To $CMDLINE[0]\n\t\tSwitch $CMDLINE[$i]\n\t\t\tCase '/?'\n\t\t\t\tMsgBox(0x40000, @ScriptName & ' Help', _\n\t\t\t\t\t\t'Switches are:' & @CRLF _\n\t\t\t\t\t\t & @CRLF & '/extract' _\n\t\t\t\t\t\t & @CRLF & @TAB & 'Extract files to current directory' _\n\t\t\t\t\t\t & @CRLF & '/x|' _\n\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t & @CRLF & @TAB & '')\n\t\t\t\tExit\n\t\t\tCase '/extract'\n\t\t\t\tFileInstall('?', @ScriptDir & '\')\n\t\t\t\tExit\n\t\t\tCase '/x'\n\t\t\tCase '/x'\n\t\t\tCase '/x'\n\t\t\tCase '/x'\n\t\t\tCase Else\n\t\t\t\tMsgBox(0x40000, 'Incorrect switch used', _\n\t\t\t\t\t\t'Command used:' & @CRLF & $CMDLINERAW & @CRLF & _\n\t\t\t\t\t\t@CRLF & 'Use /? for the switches available.')\n\t\t\t\tExit\n\t\tEndSwitch\n\tNext\nEndIf\n#EndRegion
cmdlineswitch2=#Region - CmdlineSwitch + Properties\nIf $CMDLINE[0] Then\n\tFor $i = 1 To $CMDLINE[0]\n\t\tIf StringLeft($CMDLINE[$i], 1) = '/' Then\n\t\t\tSwitch $CMDLINE[$i]\n\t\t\t\tCase '/?'\n\t\t\t\t\tMsgBox(0x40000, @ScriptName & ' Help', _\n\t\t\t\t\t\t\t'Switches are:' & @CRLF _\n\t\t\t\t\t\t\t & @CRLF & '/extract' _\n\t\t\t\t\t\t\t & @CRLF & @TAB & 'Extract files to current directory' _\n\t\t\t\t\t\t\t & @CRLF & '/x|' _\n\t\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t\t & @CRLF & @TAB & '' _\n\t\t\t\t\t\t\t & @CRLF & '/x' _\n\t\t\t\t\t\t\t & @CRLF & @TAB & '')\n\t\t\t\t\tExit\n\t\t\t\tCase '/extract'\n\t\t\t\t\tFileInstall('x', @ScriptDir & '\')\n\t\t\t\t\tExit\n\t\t\t\tCase '/x'\n\t\t\t\tCase '/x'\n\t\t\t\tCase '/x'\n\t\t\t\tCase '/x'\n\t\t\t\tCase Else\n\t\t\t\t\t_CmdlineMsgBox()\n\t\t\tEndSwitch\n\t\tElse\n\t\t\tConst $PROPERTY = StringSplit($CMDLINE[$i], '=')\n\t\t\tIf Not @error Then\n\t\t\t\tSwitch $PROPERTY[1]\n\t\t\t\t\tCase 'x'\n\t\t\t\t\t\t$x = $PROPERTY[2]\n\t\t\t\t\tCase 'x'\n\t\t\t\t\t\t$x = $PROPERTY[2]\n\t\t\t\t\tCase 'x'\n\t\t\t\t\t\t$x = $PROPERTY[2]\n\t\t\t\t\tCase 'x'\n\t\t\t\t\t\t$x = $PROPERTY[2]\n\t\t\t\t\tCase 'x'\n\t\t\t\t\t\t$x = $PROPERTY[2]\n\t\t\t\t\tCase Else\n\t\t\t\t\t\t_CmdlineMsgBox()\n\t\t\t\tEndSwitch\n\t\t\tElse\n\t\t\t\t_CmdlineMsgBox()\n\t\t\tEndIf\n\t\tEndIf\n\tNext\nEndIf\nFunc _CmdlineMsgBox()\n\tMsgBox(0x40000, 'Incorrect switch used', _\n\t\t\t'Command used:' & @CRLF & $CMDLINERAW & @CRLF & _\n\t\t\t@CRLF & 'Use /? for the switches available.')\n\tExit\nEndFunc\n#EndRegion\n

# Script switches
aes=/AutoIt3ExecuteScript |
ael=/AutoIt3ExecuteLine |
raes=Run('"' & @AutoItExe & '" /AutoIt3ExecuteScript "' & | & '"')
rwaes=RunWait('"' & @AutoItExe & '" /AutoIt3ExecuteScript "' & | & '"')
rael=Run('"' & @AutoItExe & '" /AutoIt3ExecuteLine "' & | & '"')
rwael=RunWait('"' & @AutoItExe & '" /AutoIt3ExecuteLine "' & | & '"')
